name: "ci"

on:
  push:
  pull_request:
    branches: main

# Ensure there is only ever one workflow of this kind running at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  ci:
    runs-on: ubuntu-latest
    # Avoid very long running jobs.
    timeout-minutes: 60

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        # Needed to update coverage badge and to run goreleaser.
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        # General.
        sudo apt-get install -yqq bash curl make git

    - name: Install Rust
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs > install_rust.sh
        sh install_rust.sh -y
        echo "$HOME/.cargo/bin" >> "${GITHUB_PATH}"

    - name: Build binary
      run: make build-dev
      # Treat all warnings as errors.
      env:
        RUSTFLAGS: "-Dwarnings"

    # - name: Run tests
    #   run: make test

    - name: Install cross-compilation dependencies
      run: |
        # # For Windows.
        # sudo apt-get install -yqq mingw-w64
        # For MacOS.
        sudo apt-get install -yqq \
          clang gcc g++ zlib1g-dev libmpc-dev libmpfr-dev libgmp-dev

    - name: Install toolchains
      # if: ${{ github.ref == 'refs/heads/main' }}
      run: make install-toolchains

    # - name: Build all release binaries on main
    #   # if: ${{ github.ref == 'refs/heads/main' }}
    #   run: make build-prod

    # Based on this tutorial:
    # https://jamwaffles.github.io/rust/2019/02/17/rust-cross-compile-linux-to-macos.html/
    - name: Build MacOS binaries separately
      run:
        echo '[target.x86_64-apple-darwin]' > ~/.cargo/config
        echo 'linker = "x86_64-apple-darwin14-clang"' >> ~/.cargo/config
        echo 'ar = "x86_64-apple-darwin14-ar"' >> ~/.cargo/config

        git clone https://github.com/tpoechtrager/osxcross
        cd osxcross
        wget -nc https://s3.dockerproject.org/darwin/v2/MacOSX10.10.sdk.tar.xz
        mv MacOSX10.10.sdk.tar.xz tarballs/
        UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh

        PATH="$(pwd)/target/bin:$PATH" \
        cargo build --release --target x86_64-apple-darwin
